name: Container Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  container:
    name: build fedora-dev container
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
#      - name: Install package
#        run: |
#          sudo apt-get -y install fish
      - name: Build container
        run: |
          /usr/bin/podman build \
          --format oci \
          --tls-verify true \
          --squash \
          --file Containerfile \
          --tag ${{env.GITHUB_REPOSITORY}}:latest \
          --tag ${{env.GITHUB_REPOSITORY}}:${{github.sha}} \
          ${{env.GITHUB_WORKSPACE}}
      - name: Login to ghcr.io
        run: |
          /usr/bin/podman login --username ${{env.GITHUB_ACTOR}} --password ${{secrets.GITHUB_TOKEN}} ghcr.io
      - name: Push container
        run: |
          /usr/bin/podman push localhost/${{env.GITHUB_REPOSITORY}}:latest ghcr.io/${{env.GITHUB_REPOSITORY}}:latest
          /usr/bin/podman push localhost/${{env.GITHUB_REPOSITORY}}:latest ghcr.io/${{env.GITHUB_REPOSITORY}}:${{github.sha}}

#      - name: show env
#        run: printenv
#      - name: Login to registry
#        uses: redhat-actions/podman-login@v1
#        with:
#          username: ${{ env.DOCKER_USER }}
#          password: ${{ env.DOCKER_TOKEN }}
#          registry: ${{ env.IMAGE_REGISTRY }}
#      - name: Build image
#        id: build-image
#        uses: redhat-actions/buildah-build@v2
#        with:
#          image: ${{ env.DOCKER_USER }}/fedora-dev
#          tags: latest ${{ github.sha }}
#          oci: 'true'
#          containerfiles: |
#            ./Containerfile
#          extra-args: |
#            --squash
#      - name: Push to registry
#        id: push-to-registry
#        uses: redhat-actions/push-to-registry@v2
#        with:
#          image: ${{ steps.build-image.outputs.image }}
#          tags: ${{ steps.build-image.outputs.tags }}
#          registry: ${{ env.IMAGE_REGISTRY }}
#
#      - name: Print image url
#        run: echo "Image pushed to ${{ steps.push-to-registry.outputs.registry-paths }}"
